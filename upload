#!/bin/bash

eval "$( ./login )"

GOOGLE_API_KEY=$( cat api.google )

function getaddr() {
	ADDRS=$( curl -s "https://maps.googleapis.com/maps/api/geocode/json?latlng=$1,$2&key=$GOOGLE_API_KEY" |
		jshon -e results -a -e types -e 0 -u -p -p -e formatted_address -u | paste - - )

	#echo "$ADDRS" > /dev/stderr

	for REGION in premise natural_feature airport park point_of_interest neighborhood \
		colloquial_area \
		sublocality_level_5 sublocality_level_4 sublocality_level_3 sublocality_level_2 sublocality_level_1 sublocality \
		locality \
		postal_code \
		administrative_area_level_5 administrative_area_level_4 administrative_area_level_3 administrative_area_level_2 administrative_area_level_1
	do
		ADDR=$( echo "$ADDRS" | grep "^$REGION" | head -n 1 | awk -F "\t" '{print $2}' )
		if [ -n "$ADDR" ]; then
			echo "$ADDR"
			return
		fi
	done
}

RESET=$( shopt -p nocaseglob )
shopt -s nocaseglob

# robust, but not sorted
#FILES=(*.{jpg,jpeg})

# not robust, but sorted correctly
IFS=$'\n'
FILES=( $( ls -1rtU *.{jpg,jpeg} 2> /dev/null ) )
unset IFS

$RESET

for i in "${FILES[@]}"; do
	[ -e "$i" ] || continue

	TITLE=${i%.*}
	# /^IMG_[0-9].*$/
	if [[ "$TITLE" == "IMG_"[[:digit:]]* ]]; then
		TITLE=""
	fi

	GEO_OP="update"
	read DATE LAT LNG <<<$( exiftool -dateFormat '%FT%T%z' -coordFormat '%+.6f' -CreateDate -GPSLatitude -GPSLongitude -s4 -f "$i" )
	if [ -z "$DATE" -o "-" == "$DATE" ]; then
		DATE=$( stat -t '%FT%T%z' -f '%Sm' "$i" )
	fi

	if [ -z "$LAT" -o "-" == "$LAT" ]; then
		LAT=""
		GEO_OP="delete"
	fi

	if [ -z "$LNG" -o "-" == "$LNG" ]; then
		LNG=""
		GEO_OP="delete"
	fi

	if [ "$GEO_OP" == "update" ]; then
		ADDR=$( getaddr "$LAT" "$LNG" )
	else
		ADDR=""
	fi

	echo "$i: DATE=$DATE LAT=$LAT LNG=$LNG ADDR=$ADDR TITLE=$TITLE"

	# File names of uploaded files should be double quoted, which requires...
	FILE="$i"
	FILE="${FILE//'\'/'\\'}" # ... slashes to be slash-escaped and ...
	FILE="${FILE//'"'/'\"'}" # ... double quotes to be slash escaped. See `curl` command below

	read MEDIA_ID WIDTH HEIGHT URL TITLE <<<$( curl \
		-sH "Authorization: BEARER $TOKEN" \
		"https://public-api.wordpress.com/rest/v1.1/sites/$BLOG_ID/media/new?fields=ID,width,height,URL,title" \
		--form "media[]=@\"$FILE\"" |
		# ^^^ File names with `,` or `;` must be double quoted (`media=@"FILE_NAME"`).
		# ^^^ Double quoted file names must slash-escape double quotes and slashes.
		jshon -e media -e 0 -e ID -u -p -e width -u -p -e height -u -p -e URL -u -p -e title -u )

	if [ -z "$MEDIA_ID" ]; then
		echo "$i Failed to Upload" > /dev/stderr
		continue
	fi

	URL=$( echo "$URL" | php -r 'echo htmlspecialchars( file_get_contents( "php://stdin" ), ENT_QUOTES );' );
	TITLE=$( echo "$TITLE" | php -r 'echo htmlspecialchars( file_get_contents( "php://stdin" ), ENT_QUOTES );' );

	if [ 768 -lt $WIDTH ]; then
		WIDTH_SCALED=$(( 768 ))
		HEIGHT_SCALED=$(( 768 * $HEIGHT / $WIDTH ))
	else
		WIDTH_SCALED=$WIDTH
		HEIGHT_SCALED=$HEIGHT
	fi

	POST_ID=$( curl -sH "Authorization: BEARER $TOKEN" "https://public-api.wordpress.com/rest/v1/sites/$BLOG_ID/posts/new?fields=ID" \
		--data-urlencode "content=<a href='$URL' rel='attachment wp-att-$MEDIA_ID'><img src='$URL' alt='$TITLE' width='$WIDTH_SCALED' height='$HEIGHT_SCALED' class='aligncenter size-full wp-image-$MEDIA_ID' /></a>" \
		--data "format=image" \
		--data "status=private" \
		--data-urlencode "title=$TITLE" \
		--data-urlencode "date=$DATE" \
		--data-urlencode "metadata[geo_latitude][key]=geo_latitude" \
		--data-urlencode "metadata[geo_latitude][value]=$LAT" \
		--data-urlencode "metadata[geo_latitude][operation]=$GEO_OP" \
		--data-urlencode "metadata[geo_longitude][key]=geo_longitude" \
		--data-urlencode "metadata[geo_longitude][value]=$LNG" \
		--data-urlencode "metadata[geo_longitude][operation]=$GEO_OP" \
		--data-urlencode "metadata[geo_address][key]=geo_address" \
		--data-urlencode "metadata[geo_address][value]=$ADDR" \
		--data-urlencode "metadata[geo_address][operation]=$GEO_OP" \
		--data "metadata[geo_public][key]=geo_public" \
		--data "metadata[geo_public][value]=1" \
		--data "metadata[geo_public][operation]=$GEO_OP" |
		jshon -e ID -u )

	if [ -z "$POST_ID" ]; then
		echo "$i Failed to Post" > /dev/stderr
		continue
	fi

	curl -sH "Authorization: BEARER $TOKEN" "https://public-api.wordpress.com/rest/v1.1/sites/$BLOG_ID/media/$MEDIA_ID" \
		--data-urlencode "parent_id=$POST_ID" > /dev/null
done
